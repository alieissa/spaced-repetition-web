# @format

name: Spaced Repetition Web
on:
  pull_request:
    types: [opened, synchronize, closed]
    branches:
      - main

env:
  IMAGE_NAME: spaced-repetition-web
  REPO: 079829475258.dkr.ecr.us-east-1.amazonaws.com

jobs:
  lint:
    runs-on: ubuntu-22.04
    name: Lint
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.17.x'
      - name: Install packages
        run: npm install
      - name: lint
        run: npm run lint
      
  tests:
    needs:
      - lint
    runs-on: ubuntu-22.04
    name: Test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.17.x'
      - name: Install packages
        run: npm install
      - name: Run tests
        run: npm test -- --silent

  release:
    needs: 
      - tests
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-22.04
    name: Release
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build image
        run: docker build -t $REPO/$IMAGE_NAME $GITHUB_WORKSPACE

      - name: Login to ECR
        id: ecr
        uses: jwalton/gh-ecr-login@v1
        with:
          access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          secret-access-key: ${{ secrets.AWS_ACCESS_SECRET_KEY }}
          region: ${{ vars.REGION }}
      
      - name: Push to ECR
        run: |
          docker build -t $REPO/$IMAGE_NAME $GITHUB_WORKSPACE
          docker push $REPO/$IMAGE_NAME
          docker tag $REPO/$IMAGE_NAME $REPO/$IMAGE_NAME:${GITHUB_SHA::6}
          docker push $REPO/$IMAGE_NAME:${GITHUB_SHA::6}
  
  deploy:
    needs: 
      - release
    runs-on: ubuntu-22.04
    name: Deploy
    steps:
      - name: Restart ECS Service
        run: aws ecs update-service --cluster sp --services sp-app --force-new-deployment
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_SECRET_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.REGION }}